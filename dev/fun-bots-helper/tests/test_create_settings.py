"""Execute the inner functions of tools/create_settings.py to create a temporary Config.lua 
and compare it with the original Config.lua file already merged on dev branch. This test must 
be executed after any change in get_settings and get_settings_lines, by doing this we will 
ensure it is creating the same file."""


from filecmp import cmp

from addons.gets import get_settings, get_settings_lines, get_to_root


def test_create_settings(tmp_path) -> None:
    """Test createSettings algorithm.

    Args:
        - tmp_path - built-in pytest fixture to create Pathlib temporary files

    Returns:
        None
    """
    get_to_root()
    original_config_path = "ext/Shared/Config.lua"
    d = tmp_path / "sub"
    d.mkdir()
    temp_config_path = d / "temp_file.lua"

    allSettings = get_settings(first_key="Name")
    with temp_config_path.open("a") as temp_config:
        temp_config.write(
            """-- this file is autogenerated out of the Settings/SettingsDefinition.lua-file.
-- for permanent changes use this file and regenerate the Config.lua-file.\n
---@class Config
Config = {
    """
        )
        outFileLines = get_settings_lines(allSettings)
        for line in outFileLines:
            temp_config.write(line + "\n")

    assert cmp(f"{d}/temp_file.lua", original_config_path)
